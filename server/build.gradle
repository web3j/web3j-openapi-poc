description 'web3j-openapi server module'

apply plugin: 'io.epirus'
apply plugin: 'org.unbroken-dome.test-sets'

testSets {
    integrationTest {
        dirName = 'integration-test'
    }
}

dependencies {
    api project(':web3j-openapi-core')

    implementation "org.web3j:core:${versions.web3j}"

    implementation "org.glassfish.jersey.containers:jersey-container-servlet:${versions.jersey}"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:${versions.jersey}"
    implementation "org.glassfish.jersey.media:jersey-media-sse:${versions.jersey}"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${versions.jersey}"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${versions.jackson}"

    implementation "org.slf4j:jul-to-slf4j:${versions.slf4j}"

    implementation "info.picocli:picocli:${versions.picocli}"

    api "org.eclipse.jetty:jetty-server:${versions.jetty}"
    implementation "org.eclipse.jetty:jetty-servlet:${versions.jetty}"

    implementation "io.swagger.core.v3:swagger-annotations:${versions.swagger}"
    implementation "io.swagger.core.v3:swagger-jaxrs2:${versions.swagger}"

    testImplementation project(':web3j-openapi-client')

    integrationTestImplementation "org.web3j:web3j-unit:${versions.web3j}" // FIXME Release web3j unit
    integrationTestImplementation "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:${versions.jersey}"
}

ext {
    generatedProjectName = "test-project"
    outputDirectory = "$projectDir/build/generated/web3j-openapi"
}

task copyOpenApiResources(type: Copy) {
    from 'build/resources/integrationTest/server/src/main/resources'
    into "$outputDirectory/$generatedProjectName/server/src/main/resources"
    delete('src/main/resources/logging.properties')
    delete('src/main/resources/META-INF')
}

task generateOpenApiProject(type: Exec) {
    dependsOn 'installEpirusCli'
    dependsOn copyOpenApiResources
    commandLine 'epirus',
            'openapi',
            'generate',
            '--name', "$generatedProjectName",
            '--context-path', 'api',
            '--package-name', 'com.test',
            '--abi', "$projectDir/src/integration-test/resources/contracts",
            '--bin', "$projectDir/src/integration-test/resources/contracts",
            '--output', "$outputDirectory"
}

compileIntegrationTestKotlin.dependsOn generateOpenApiProject

sourceSets {
    integrationTest.java.srcDirs += [
        "$outputDirectory/$generatedProjectName/server/src/main/java"
    ]
    integrationTest.kotlin.srcDirs += [
        "$outputDirectory/$generatedProjectName/core/src/main/kotlin",
        "$outputDirectory/$generatedProjectName/server/src/main/kotlin",
        "$outputDirectory/$generatedProjectName/server/src/main/java"
    ]
}

task copyIntegrationTestResources(type: Copy) {
    from "$rootDir/codegen/build/resources/main/server/src/main/resources"
    into 'build/resources/integrationTest/server/src/main/resources'
    dependsOn processTestResources
}

integrationTest.dependsOn copyIntegrationTestResources
